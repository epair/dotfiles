#!/usr/bin/env bash

switch_to() {
  if [[ -z $TMUX ]]; then
    tmux attach-session -t "$1"
  else
    tmux switch-client -t "$1"
  fi
}

has_session() {
  tmux list-sessions | grep -q "^$1:"
}

hydrate() {
  local script_path=""
  local script_dir=""
  
  if [ -f "$2/.tmux-sessionizer" ]; then
    script_path="$2/.tmux-sessionizer"
    script_dir="$2"
  elif [ -f "$(dirname "$2")/.tmux-sessionizer" ]; then
    script_path="$(dirname "$2")/.tmux-sessionizer"
    script_dir="$(dirname "$2")"
  elif [ -f "$HOME/.tmux-sessionizer" ]; then
    script_path="$HOME/.tmux-sessionizer"
    script_dir="$HOME"
  fi
  
  if [ -n "$script_path" ]; then
    tmux run-shell -b -t "$1" -c "$script_dir" "bash '.tmux-sessionizer' && tmux display-message -t '$1' 'Session hydrated successfully' || tmux display-message -t '$1' 'Session hydration failed'"
  fi
}

if [[ $# -eq 1 ]]; then
  selected=$1
  # Check if the argument is a session name (not a path)
  if tmux has-session -t "$selected" 2>/dev/null; then
    switch_to "$selected"
    exit 0
  fi
else
  selected=$(find ~/code -mindepth 1 -maxdepth 1 -type d | fzf)
fi

if [[ -z $selected ]]; then
  exit 0
fi

selected_name=$(basename "$selected" | tr . -)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
  tmux new-session -s "$selected_name" -c "$selected"
  hydrate "$selected_name" "$selected"
  exit 0
fi

if ! has_session "$selected_name"; then
  tmux new-session -ds "$selected_name" -c "$selected"
  hydrate "$selected_name" "$selected"
fi

switch_to "$selected_name"
