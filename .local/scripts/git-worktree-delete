#!/usr/bin/env bash

# Delete a git worktree with selection menu
# Works with any git repository that has a .bare directory

# Function to find git root with .bare directory
find_git_worktree_root() {
    local current_dir="$PWD"
    
    # Check current directory and parent directories for .bare
    while [[ "$current_dir" != "/" ]]; do
        if [[ -d "$current_dir/.bare" ]]; then
            echo "$current_dir"
            return 0
        fi
        current_dir=$(dirname "$current_dir")
    done
    
    return 1
}

# Find the worktree root
WORKTREE_ROOT=$(find_git_worktree_root)

if [[ -z "$WORKTREE_ROOT" ]]; then
    tmux display-message -d 2000 "Error: Not in a git worktree with .bare directory"
    exit 1
fi

# Function to get branch prefix from worktree
get_branch_prefix() {
    local worktree_name="$1"
    local worktree_path="$WORKTREE_ROOT/$worktree_name"
    
    # Get the current branch name
    local branch_name=$(cd "$worktree_path" 2>/dev/null && git branch --show-current 2>/dev/null)
    
    if [[ -z "$branch_name" ]]; then
        echo ""  # No prefix
        return
    fi
    
    # Extract prefix by removing worktree name from the end of branch name
    if [[ "$branch_name" == *"$worktree_name" ]]; then
        # Remove the worktree name from the end to get prefix
        local prefix="${branch_name%$worktree_name}"
        echo "$prefix"
    else
        echo ""  # No prefix
    fi
}

# Function to delete worktree
delete_worktree() {
    local worktree_name="$1"
    local confirmed="$2"
    
    if [[ -z "$worktree_name" ]]; then
        return 0
    fi
    
    # If not confirmed, ask for confirmation
    if [[ "$confirmed" != "confirmed" ]]; then
        tmux command-prompt -p "Delete worktree '$worktree_name'? (y/n):" \
            "if-shell \"[ '%%' = 'y' ]\" \"run-shell 'git-worktree-delete $worktree_name confirmed'\""
        return 0
    fi
    
    # Auto-detect branch prefix
    local branch_prefix=$(get_branch_prefix "$worktree_name")
    
    # Change to worktree root directory
    cd "$WORKTREE_ROOT" || {
        tmux display-message -d 2000 "Error: Cannot access worktree root directory"
        return 1
    }
    
    tmux display-message "Deleting worktree '$worktree_name' (prefix: '$branch_prefix')..."
    
    # Delete the worktree
    if WORKTREE_PREFIX="$branch_prefix" worktree-manager remove "$worktree_name"; then
        # Kill the tmux session if it exists
        if tmux has-session -t "$worktree_name" 2>/dev/null; then
            tmux kill-session -t "$worktree_name"
        fi
        tmux display-message "Worktree '$worktree_name' deleted successfully"
    else
        tmux display-message -d 2000 "Error: Failed to delete worktree '$worktree_name'"
    fi
}

# Get list of worktrees (exclude hidden directories and main)
get_worktrees() {
    cd "$WORKTREE_ROOT" || return 1
    find . -maxdepth 1 -type d ! -name "." ! -name ".*" ! -name "main" -exec basename {} \; | sort
}

# If called with arguments, execute the deletion
if [[ $# -ge 1 ]]; then
    worktree_name="$1"
    confirmed="${2:-}"
    delete_worktree "$worktree_name" "$confirmed"
    exit 0
fi

# Build menu of worktrees
worktrees=$(get_worktrees)

if [[ -z "$worktrees" ]]; then
    tmux display-message "No worktrees to delete"
    exit 0
fi

# Get repository name for display
REPO_NAME=$(basename "$WORKTREE_ROOT")

# Create menu items
menu_items=("-T" "Select Worktree to Delete - $REPO_NAME" "" "" "")

# Counter for hotkeys
index=1

while IFS= read -r worktree; do
    if [[ -n "$worktree" ]]; then
        # Determine hotkey (only for first 9 items)
        hotkey=""
        if [[ $index -le 9 ]]; then
            hotkey="$index"
        fi
        
        # Check if session exists
        if tmux has-session -t "$worktree" 2>/dev/null; then
            if [[ -n "$hotkey" ]]; then
                menu_items+=("$worktree •" "$hotkey" "run-shell 'git-worktree-delete $worktree'")
            else
                menu_items+=("$worktree •" "" "run-shell 'git-worktree-delete $worktree'")
            fi
        else
            if [[ -n "$hotkey" ]]; then
                menu_items+=("$worktree" "$hotkey" "run-shell 'git-worktree-delete $worktree'")
            else
                menu_items+=("$worktree" "" "run-shell 'git-worktree-delete $worktree'")
            fi
        fi
        
        ((index++))
    fi
done <<< "$worktrees"

# Display the menu
tmux display-menu -x C -y C "${menu_items[@]}"