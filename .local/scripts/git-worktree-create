#!/usr/bin/env bash

# Create a new git worktree with tmux prompts
# Works with any git repository that has a .bare directory

# Default branch prefix
DEFAULT_PREFIX="ep/"

# Function to find git root with .bare directory
find_git_worktree_root() {
    local current_dir="$PWD"
    
    # Check current directory and parent directories for .bare
    while [[ "$current_dir" != "/" ]]; do
        if [[ -d "$current_dir/.bare" ]]; then
            echo "$current_dir"
            return 0
        fi
        current_dir=$(dirname "$current_dir")
    done
    
    return 1
}


# Find the worktree root
WORKTREE_ROOT=$(find_git_worktree_root)

if [[ -z "$WORKTREE_ROOT" ]]; then
    tmux display-message -d 2000 "Error: Not in a git worktree with .bare directory"
    exit 1
fi

# Function to create worktree with given parameters
create_worktree() {
    local input="$1"
    
    # Parse input: "worktree_name [prefix]"
    # If prefix is not provided, use default
    local worktree_name="${input%% *}"
    local remaining="${input#* }"
    
    if [[ "$remaining" == "$input" ]]; then
        # No space found, so no prefix was provided
        local branch_prefix="$DEFAULT_PREFIX"
    else
        # Prefix was provided
        local branch_prefix="$remaining"
    fi
    
    if [[ -z "$worktree_name" ]]; then
        tmux display-message -d 2000 "Error: Worktree name cannot be empty"
        return 1
    fi
    
    # Change to worktree root directory
    cd "$WORKTREE_ROOT" || {
        tmux display-message -d 2000 "Error: Cannot access worktree root directory"
        return 1
    }
    
    # Create the worktree
    tmux display-message "Creating worktree '$worktree_name' with branch prefix '$branch_prefix'..."
    
    if WORKTREE_PREFIX="$branch_prefix" worktree-manager add "$worktree_name"; then
        # Success - switch to the new worktree session
        # Small delay to ensure worktree is fully created
        sleep 0.5
        tmux-sessionizer "$WORKTREE_ROOT/$worktree_name"
    else
        tmux display-message -d 2000 "Error: Failed to create worktree '$worktree_name'"
    fi
}

# If called with arguments, execute the creation
if [[ $# -ge 1 ]]; then
    create_worktree "$*"
else
    # Show single prompt for both inputs
    tmux command-prompt -p "Enter: worktree-name [prefix] (default prefix: $DEFAULT_PREFIX):" \
        "run-shell 'git-worktree-create %%'"
fi