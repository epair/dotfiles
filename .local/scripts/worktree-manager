#!/usr/bin/env bash

# Expects worktree directory to contain a .bare directory and an optional .worktree-setup post install script
# (assumes using git-clone-bare-for-worktrees script)
# Example worktree directory structure:
# .bare
# main
# new-awesome-feature
# hotfix-bug-12
# ...
#
#
# Examples of call:
# worktree-manager add feature-branch
# => Adds a worktree named feature-branch that's attached to a branch named ep/feature-branch
#
# WORKTREE_PREFIX='' worktree-manager add feature-branch
# => Adds a worktree named feature-branch that's attached to a branch named feature-branch
#
# worktree-manager add remote-branch
# => Fetches a branch named ep/remote-branch and creates a worktree reference to it
#
# worktree-manager remove feature-branch
# => Deletes a worktree named feature-branch that's attached to a branch named ep/feature-branch

if [ -z "${WORKTREE_PREFIX+x}" ]; then
    echo "no worktree prefix"
    echo "using ep/"
    WORKTREE_PREFIX='ep/'
fi

if [[ -d .bare ]]; then
  parent_dir=$(pwd)
elif [[ -d ../.bare ]]; then
  parent_dir=$(cd .. && pwd)
else
  echo "current directory is not a git worktree"
  exit 1
fi

while [[ $# -gt 0 ]]; do
  if [[ $1 == "add" || $1 == "remove" ]]; then
    command="$1"
  else
    worktree_name="$1"
  fi
  shift
done

worktree_dir="$parent_dir/$worktree_name"
branch_name="$WORKTREE_PREFIX$worktree_name"

setup_worktree_env() {
  if [[ -x "$parent_dir/.worktree-setup" ]]; then
    "$parent_dir/.worktree-setup" "$worktree_dir"
  fi
}

if [[ "$command" == "add" && -n "$worktree_name" ]]; then
  if git show-ref --verify --quiet "refs/remotes/origin/$branch_name"; then
    git fetch origin "$branch_name:$branch_name"
  else
    git fetch origin main:main
    git branch "$branch_name" main > /dev/null 2>&1
  fi
  git worktree add "$worktree_dir" "$branch_name" > /dev/null 2>&1
  setup_worktree_env
elif [[ "$command" == "remove" && -n "$worktree_name" ]]; then
  git worktree remove --force "$worktree_name"
  git branch -D "$branch_name"
else
  echo 'either no command or branch name specified'
  exit 1
fi
